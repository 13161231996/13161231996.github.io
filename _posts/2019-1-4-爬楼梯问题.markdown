---

layout:     post
title:      "Fibonacci "
subtitle:   " \"爬楼梯问题\""
date:       2019-01-04 11:22:00
author:     "BaiDong"
header-img: "img/home-bg-art.jpg"
catalog: true
tags:
    - 算法学习

---

	假设你正在爬楼梯。需要 n 阶你才能到达楼顶。

	每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？

	注意：给定 n 是一个正整数。

	示例 1：

	输入： 2
	
	输出： 2
	
	解释： 有两种方法可以爬到楼顶。
	
	1.  1 阶 + 1 阶
	
	2.  2 阶
	
	示例 2：

	输入： 3
	
	输出： 3
	
	解释： 有三种方法可以爬到楼顶。
	
	1.  1 阶 + 1 阶 + 1 阶
	
	2.  1 阶 + 2 阶
	
	3.  2 阶 + 1 阶

	 
算法实现

	class Solution:
	
		def climbStairs(self, n):
		
			"""
			
			:type n: int
			
			:rtype: int
			
			"""
			
			a = 0
			
			b = 1
			
			i = 1
			
			while i<=n:
			
				a, b = b, a + b
				
				i+=1
				
			return b
		
总结：斐波那契数列。

---


