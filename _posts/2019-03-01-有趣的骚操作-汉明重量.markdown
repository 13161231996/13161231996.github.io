---

layout:     post
title:      "汉明重量"
subtitle:   " \"算法骚操作\""
date:       2019-03-01 18:39:00
author:     "BaiDong"
header-img: "img/home-bg-art.jpg"
catalog: true
tags:
    - 算法骚操作

---
编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）

示例1

    输入：00000000000000000000000000001011
    输出：3
    解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。

示例2

    输入：00000000000000000000000010000000
    输出：1
    解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。

示例3

    输入：11111111111111111111111111111101
    输出：31
    解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。


题解:位操作

    将无符号整数 与1 & ,如果==1  count+=1

代码:
Go

    func hammingWeight(num uint32) int {
        count := 0
        for num != 0 {
            if num&1 == 1 {
                count++
            }
            num >>= 1
        }
        return count
    }

